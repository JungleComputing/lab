<project name="dachmw" default="build" basedir=".">
    <description>
	Build file for DachMW program
    </description>

    <property name="version" value="0.8" />

    <property name="dist-name" value="${ant.project.name}-${version}" />

    <!-- Import environment properties -->

    <property environment="env" />

    <target name="build"
            description="Build build all sources"
            depends="clean,compile,ibisc" />

    <target name="test"
            description="Run tests"
            depends="" />

    <property name="src" location="src" />
    <property name="tmp" location="tmp" />
    <property name="lib" location="lib" />
    <property name="external" location="external" />
    <property name="javadoc" location="javadoc" />

    <!-- Compile -->
    <target name="compile">
        <mkdir dir="${tmp}" />
        <mkdir dir="${lib}" />

        <!-- copy jars in external directory to lib -->
        <copy todir="${lib}">
            <fileset dir="${external}" includes="ibis/*.jar" />
            <fileset dir="${external}" includes="deploy/**/*.jar" />
            <fileset dir="${external}" includes="jfreechart/*.jar" />
            <fileset dir="${external}" includes="*.jar" />
        </copy>

        <path id="default.classpath">
            <fileset dir="${lib}">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${external}">
                <include name="compile/*.jar" />
            </fileset>
            <pathelement path="${tmp}" />
        </path>
	
        <!-- Compile the java code from ${src} into ${tmp} -->
        <javac srcdir="${src}" 
               destdir="${tmp}" 
               debug="on"
               source="1.6"
               target="1.6"
               classpathref="default.classpath">
		<compilerarg value="-Xlint:unchecked" />
	</javac>

        <!-- Create jar file -->
        <jar destfile="${lib}/${dist-name}.jar" basedir="${tmp}" includes="**/*.class">
        </jar>

        <delete dir="${tmp}" />
    </target>

    <target name="ibisc">
        <mkdir dir="${tmp}" />

	<java	classname="ibis.compile.Ibisc"
		taskname="Ibisc"
		dir="${tmp}"
		failonerror="true"
		maxmemory="512M"
		fork="true">
		<arg line="${lib}/${dist-name}.jar"/>
		<classpath refid="default.classpath"/>
	</java>

        <delete dir="${tmp}"/>
    </target>

    <!-- Generate javadoc -->
    <target name="javadoc" description="generate all javadocs">
        <javadoc destdir="${javadoc}"
                 access="public"
                 classpathref="default.classpath"
                 packagenames="*"
                 sourcepath="${src}"
                 windowtitle="Ibis ${ant.project.name} Documentation"
                 doctitle="Ibis ${ant.project.name} Documentation"
                 bottom="The Ibis project">
            <link href="http://java.sun.com/j2se/1.6.0/docs/api/" />
        </javadoc>
    </target>

    <!-- Clean up everything -->
    <target name="clean" description="Clean up">
        <delete dir="${tmp}" />
        <delete dir="${lib}" />
        <delete dir="${javadoc}" />
    </target>

    <target name="bin.zip" depends="build">
        <delete file="${dist-name}-bin.zip" />
        <zip destfile="${dist-name}-bin.zip">
            <zipfileset dir="."
                        prefix="${dist-name}"
                        includes="*.example,lib/*.jar,lib/**/*.jar,ibis.properties,log4j.properties,smartsockets.properties,clusters/**,bin/nodes/**"/>
            <zipfileset dir="."
                        prefix="${dist-name}"
                        filemode="755"
                        includes="bin/*.sh" />
        </zip>
    </target>

    <target name="src.zip" depends="clean">
        <delete file="${dist-name}-src.zip" />

        <zip destfile="${dist-name}-src.zip">
            <zipfileset dir="."                         
                        includes="*.example,src/**,scripts/**,support-libs/**,ibis.properties.example,log4j.properties,smartsockets.properties.example,build.xml,clusters/**"
                        prefix="${dist-name}" />

            <zipfileset dir="."
                        prefix="${dist-name}"
                        filemode="755"
                        includes="bin/**" />
        </zip>
    </target>

    <target name="zip" depends="src.zip,bin.zip">
    </target>

</project>
